name: Generate BPMN SVGs and Update README

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-svgs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Voorkomt dat GITHUB_TOKEN automatisch wordt gebruikt voor pushes

      - name: Set up directories
        run: |
          mkdir -p processed
          mkdir -p svgs

      - name: Find and process all BPMN files
        run: |
          BPMN_DIR="bpmn"  # De map waar de BPMN-bestanden zich bevinden
          PROCESSED_DIR="processed"
          SVG_DIR="svgs"

          # Controleer of de BPMN-directory bestaat
          if [ ! -d "$BPMN_DIR" ]; then
            echo "De directory '$BPMN_DIR' bestaat niet."
            exit 1
          fi

          # Vind alle BPMN-bestanden in de BPMN-directory
          BPMN_FILES=$(find "$BPMN_DIR" -type f -name "*.bpmn")

          if [ -z "$BPMN_FILES" ]; then
            echo "Geen BPMN-bestanden gevonden in '$BPMN_DIR'."
            exit 0  # Geen fouten, gewoon geen bestanden om te verwerken
          fi

          for BPMN_FILE in $BPMN_FILES; do
            BASENAME=$(basename "$BPMN_FILE" .bpmn)
            SVG_FILE="${SVG_DIR}/${BASENAME}.svg"

            echo "Verwerken van '$BPMN_FILE' naar '$SVG_FILE'"

            # Gebruik de Kroki API om het BPMN-diagram om te zetten naar SVG
            curl -X POST \
              -H "Content-Type: text/plain" \
              --data-binary "@$BPMN_FILE" \
              https://kroki.io/bpmn/svg \
              --output "$SVG_FILE"

            # Controleer of de SVG correct is gegenereerd
            if [ ! -f "$SVG_FILE" ]; then
              echo "Fout bij het genereren van '$SVG_FILE' via Kroki."
              exit 1
            fi

            # Verplaats het verwerkte BPMN-bestand naar de processed directory
            mv "$BPMN_FILE" "$PROCESSED_DIR/"
          done

      - name: Update README with SVG links
        run: |
          SVG_DIR="svgs"
          README_FILE="README.md"
          TEMP_README="README_temp.md"

          # Begin met een kopie van de bestaande README
          cp "$README_FILE" "$TEMP_README"

          # Verwijder bestaande BPMN Diagram sectie indien aanwezig
          if grep -q "## BPMN Diagrams" "$TEMP_README"; then
            # Verwijder alles na "## BPMN Diagrams"
            awk '/## BPMN Diagrams/ {print; exit}' "$TEMP_README" > "${TEMP_README}.tmp"
            mv "${TEMP_README}.tmp" "$TEMP_README"
          fi

          # Voeg de BPMN Diagrams sectie toe
          {
            echo ""
            echo "## BPMN Diagrams"
            echo ""
            for SVG in $(ls "$SVG_DIR"/*.svg 2>/dev/null); do
              SVG_NAME=$(basename "$SVG")
              echo "### ${SVG_NAME%.svg}"
              echo ""
              echo "![${SVG_NAME%.svg}](./$SVG)"
              echo ""
            done
          } >> "$TEMP_README"

          # Vervang de originele README door de bijgewerkte versie
          mv "$TEMP_README" "$README_FILE"

      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add svgs/*.svg processed/ README.md
          git commit -m "Generate BPMN SVGs and update README [skip ci]" || echo "Geen wijzigingen om te committen"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
